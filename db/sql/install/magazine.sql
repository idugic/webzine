-- READER_TYPE
CREATE TABLE READER_TYPE (
  ID   INTEGER      NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  CD   VARCHAR (15) NOT NULL,
  NAME VARCHAR (50) NOT NULL
);
ALTER TABLE READER_TYPE ADD CONSTRAINT READ_TYPE_PK PRIMARY KEY (ID);
ALTER TABLE READER_TYPE ADD CONSTRAINT READ_TYPE_UK_1 UNIQUE (CD);

-- CATEGORY
CREATE TABLE CATEGORY (
  ID             INTEGER      NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  READER_TYPE_ID INTEGER      NOT NULL,
  NAME           VARCHAR (75) NOT NULL,
  UC             INTEGER      NOT NULL,
  DC             TIMESTAMP    NOT NULL,
  UM             INTEGER,
  DM             TIMESTAMP
);
ALTER TABLE CATEGORY ADD CONSTRAINT CATE_PK PRIMARY KEY (ID);
ALTER TABLE CATEGORY ADD CONSTRAINT CATE_READ_TYPE_FK_1 FOREIGN KEY (READER_TYPE_ID) REFERENCES READER_TYPE (ID);
ALTER TABLE CATEGORY ADD CONSTRAINT CATE_USER_FK_1 FOREIGN KEY (UC) REFERENCES USERS (ID);
ALTER TABLE CATEGORY ADD CONSTRAINT CATE_USER_FK_2 FOREIGN KEY (UM) REFERENCES USERS (ID);

-- ARTICLE
CREATE TABLE ARTICLE (
  ID                 INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  STATUS             INTEGER       NOT NULL,
  AUTHOR_USER_ID     INTEGER       NOT NULL,
  TITLE              VARCHAR (200) NOT NULL,
  MANAGED_CONTENT_ID INTEGER       NOT NULL,
  ABSTRACT_TEXT      VARCHAR (500),
  ABSTRACT_IMAGE     BLOB,
  PUBLISHED_BY       INTEGER,
  PUBLISHED_AT       TIMESTAMP,
  UC                 INTEGER       NOT NULL,
  DC                 TIMESTAMP     NOT NULL,
  UM                 INTEGER,
  DM                 TIMESTAMP
);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_PK PRIMARY KEY (ID);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_CK_1 CHECK (STATUS IN (1,2,100));
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_MANA_CONT_FK_1 FOREIGN KEY (MANAGED_CONTENT_ID) REFERENCES MANAGED_CONTENT (ID);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_USER_FK_1 FOREIGN KEY (PUBLISHED_BY) REFERENCES USERS (ID);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_USER_FK_2 FOREIGN KEY (AUTHOR_USER_ID) REFERENCES USERS (ID);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_USER_FK_3 FOREIGN KEY (UC) REFERENCES USERS (ID);
ALTER TABLE ARTICLE ADD CONSTRAINT ARTI_USER_FK_4 FOREIGN KEY (UM) REFERENCES USERS (ID);

-- ARTICLE_CATEGORY
CREATE TABLE ARTICLE_CATEGORY (
  ID          INTEGER   NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  ARTICLE_ID  INTEGER   NOT NULL,
  CATEGORY_ID INTEGER   NOT NULL,
  UC          INTEGER   NOT NULL,
  DC          TIMESTAMP NOT NULL,
  UM          INTEGER,
  DM          TIMESTAMP
);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_PK PRIMARY KEY (ID);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_UK_1 UNIQUE (ARTICLE_ID, CATEGORY_ID);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_ARTI_FK_1 FOREIGN KEY (ARTICLE_ID) REFERENCES ARTICLE (ID);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_CATE_FK_1 FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (ID);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_USER_FK_1 FOREIGN KEY (UC) REFERENCES USERS (ID);
ALTER TABLE ARTICLE_CATEGORY ADD CONSTRAINT ARTI_CATE_USER_FK_2 FOREIGN KEY (UM) REFERENCES USERS (ID);

-- NEWS
CREATE TABLE NEWS (
  ID           INTEGER       NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  STATUS       INTEGER       NOT NULL,
  TEXT         VARCHAR (100) NOT NULL,
  LINK         VARCHAR (250),
  LINK_TARGET  VARCHAR (15),
  PUBLISHED_BY INTEGER,
  PUBLISHED_AT TIMESTAMP,
  UC           INTEGER       NOT NULL,
  DC           TIMESTAMP     NOT NULL,
  UM           INTEGER,
  DM           TIMESTAMP
);
ALTER TABLE NEWS ADD CONSTRAINT NEWS_PK PRIMARY KEY (ID);
ALTER TABLE NEWS ADD CONSTRAINT NEWS_CK_1 CHECK (STATUS IN (1,100));
ALTER TABLE NEWS ADD CONSTRAINT NEWS_USER_FK_1 FOREIGN KEY (UC) REFERENCES USERS (ID);
ALTER TABLE NEWS ADD CONSTRAINT NEWS_USER_FK_2 FOREIGN KEY (UM) REFERENCES USERS (ID);
ALTER TABLE NEWS ADD CONSTRAINT NEWS_USER_FK_3 FOREIGN KEY (PUBLISHED_BY) REFERENCES USERS (ID);
